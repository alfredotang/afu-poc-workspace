/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './../pages/__root'
import { Route as AboutImport } from './../pages/about'
import { Route as AboutIndexImport } from './../pages/about/index'
import { Route as AboutAboutIdImport } from './../pages/about/$aboutId'

// Create/Update Routes

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const AboutIndexRoute = AboutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AboutRoute,
} as any)

const AboutAboutIdRoute = AboutAboutIdImport.update({
  id: '/$aboutId',
  path: '/$aboutId',
  getParentRoute: () => AboutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/about/$aboutId': {
      id: '/about/$aboutId'
      path: '/$aboutId'
      fullPath: '/about/$aboutId'
      preLoaderRoute: typeof AboutAboutIdImport
      parentRoute: typeof AboutImport
    }
    '/about/': {
      id: '/about/'
      path: '/'
      fullPath: '/about/'
      preLoaderRoute: typeof AboutIndexImport
      parentRoute: typeof AboutImport
    }
  }
}

// Create and export the route tree

interface AboutRouteChildren {
  AboutAboutIdRoute: typeof AboutAboutIdRoute
  AboutIndexRoute: typeof AboutIndexRoute
}

const AboutRouteChildren: AboutRouteChildren = {
  AboutAboutIdRoute: AboutAboutIdRoute,
  AboutIndexRoute: AboutIndexRoute,
}

const AboutRouteWithChildren = AboutRoute._addFileChildren(AboutRouteChildren)

export interface FileRoutesByFullPath {
  '/about': typeof AboutRouteWithChildren
  '/about/$aboutId': typeof AboutAboutIdRoute
  '/about/': typeof AboutIndexRoute
}

export interface FileRoutesByTo {
  '/about/$aboutId': typeof AboutAboutIdRoute
  '/about': typeof AboutIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/about': typeof AboutRouteWithChildren
  '/about/$aboutId': typeof AboutAboutIdRoute
  '/about/': typeof AboutIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/about' | '/about/$aboutId' | '/about/'
  fileRoutesByTo: FileRoutesByTo
  to: '/about/$aboutId' | '/about'
  id: '__root__' | '/about' | '/about/$aboutId' | '/about/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AboutRoute: typeof AboutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AboutRoute: AboutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/about"
      ]
    },
    "/about": {
      "filePath": "about.tsx",
      "children": [
        "/about/$aboutId",
        "/about/"
      ]
    },
    "/about/$aboutId": {
      "filePath": "about/$aboutId.tsx",
      "parent": "/about"
    },
    "/about/": {
      "filePath": "about/index.tsx",
      "parent": "/about"
    }
  }
}
ROUTE_MANIFEST_END */
